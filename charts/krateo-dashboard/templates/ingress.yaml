{{- if .Values.ingress.enabled -}}
{{- $frontendUrl := urlParse .Values.frontendUrl -}}
{{- $backendUrl := urlParse .Values.backendUrl -}}
{{- $lighthouseUrl := urlParse .Values.lighthouseUrl -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ include "krateo.name" . }}-ingress
  annotations:
    {{- if .Values.issuer.email }}
    cert-manager.io/cluster-issuer: {{ .Values.issuer.clusterIssuer }}
    {{- end }}
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
{{- if .Values.ingress.tls.enabled -}}
spec:
  tls:
    - secretName: {{ include "krateo.name" . }}-tls
      hosts:
        - {{ $frontendUrl.host }}
        - {{ $backendUrl.host }}
        - {{ $lighthouseUrl.host }}
{{- end -}}
  rules:
    - host: {{ $frontendUrl.host }}
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ include "frontend.serviceName" . }}
              servicePort: 80
          {{/* Route the backend inside the same hostname as the frontend when they are the same */}}
          {{- if eq $frontendUrl.host $backendUrl.host}}
          - path: /api
            backend:
              serviceName: {{ include "backend.serviceName" . }}
              servicePort: 80
          {{/* Route the backend through a different host */}}
          {{- else -}}
    - host: {{ $backendUrl.host }}
      http:
        paths:
          - path: {{ $backendUrl.path | default "/" }}
            backend:
              serviceName: {{ include "backend.serviceName" . }}
              servicePort: 80
         {{- end }}

{{/* Route lighthouse through a different host */}}
{{- if .Values.lighthouse.enabled -}}
{{- if not ( eq $frontendUrl.host $lighthouseUrl.host ) }}
    - host: {{ $lighthouseUrl.host }}
      http:
        paths:
          - path: {{ $lighthouseUrl.path | default "/" }}
            backend:
              serviceName: {{ include "lighthouse.serviceName" . }}
              servicePort: 80
{{- else }}
{{/* Route lighthouse by path with re-write rules when it is hosted under the same hostname */}}
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: {{ include "krateo.name" . }}-ingress-lighthouse
  annotations:
    {{- if .Values.issuer.email }}
    cert-manager.io/cluster-issuer: {{ .Values.issuer.clusterIssuer }}
    {{- end }}
    {{- toYaml .Values.ingress.annotations | nindent 4 }}
spec:
  tls:
    - secretName: {{ include "krateo.name" . }}-tls
      hosts:
        - {{ $lighthouseUrl.host }}
  rules:
    - host: {{ $frontendUrl.host }}
      http:
        paths:
          - path: {{$lighthouseUrl.path}}(/|$)(.*)
            backend:
              serviceName: {{ include "lighthouse.serviceName" . }}
              servicePort: 80
{{- end }}
{{- end -}}
{{- end -}}