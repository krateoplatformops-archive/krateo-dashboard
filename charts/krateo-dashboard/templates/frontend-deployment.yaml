{{- if .Values.frontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "krateo.name" . }}-frontend

spec:
  replicas: {{ .Values.frontend.replicaCount }}

  selector:
    matchLabels:
      app: backstage
      component: frontend

  template:
    metadata:
      annotations:
        ad.datadoghq.com/backstage.logs: '[{"source":"backstage","service":"frontend"}]'
      labels:
        app: backstage
        component: frontend

    spec:
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end }}
      containers:
        - name: krateo-frontend
          image: {{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}
          imagePullPolicy: {{ .Values.frontend.image.pullPolicy }}
          ports:
            - containerPort: 8080
          resources:
            {{- toYaml .Values.frontend.resources | nindent 12 }}
          env:
            - name: NODE_OPTIONS
              value: "--max-old-space-size=4096"
          envFrom:
            - configMapRef:
                name: {{ include "krateo.name" . }}-app-env
            - configMapRef:
                name: {{ include "krateo.name" . }}-auth
          volumeMounts:
            - name: app-config
              mountPath: {{ printf "/app/%s" (include "krateo.appConfigFilename" .) }}
              subPath: {{ include "krateo.appConfigFilename" . }}
            - name: runtime-config-volume
              mountPath: /app/runtime-config.js
              subPath: runtime-config.js
      volumes:
        - name: app-config
          configMap:
            name: {{ include "krateo.name" . }}-app-config
        - name: runtime-config-volume
          configMap:
            name: runtime-config
      {{- if .Values.global.nodeSelector }}
      nodeSelector: {{- toYaml .Values.global.nodeSelector | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "frontend.serviceName" . }}

spec:
  ports:
    - port: 80
      targetPort: 8080

  selector:
    app: backstage
    component: frontend

  type: {{ .Values.frontend.service.type }}
{{- end }}
